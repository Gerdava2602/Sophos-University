// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SophosProject.PostgreSQL;

#nullable disable

namespace SophosProject.Migrations
{
    [DbContext(typeof(UniversityDBContext))]
    [Migration("20231114175226_models")]
    partial class models
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SophosProject.Models.Alumno", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("FacultadId")
                        .HasColumnType("uuid")
                        .HasColumnName("FacultadId");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.HasKey("Id");

                    b.HasIndex("FacultadId");

                    b.ToTable("Alumno", (string)null);
                });

            modelBuilder.Entity("SophosProject.Models.Curso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Cupos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<Guid?>("PreRequisitoId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProfesorId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("PreRequisitoId");

                    b.HasIndex("ProfesorId");

                    b.ToTable("Curso", (string)null);
                });

            modelBuilder.Entity("SophosProject.Models.CursoAlumno", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AlumnoId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("uuid");

                    b.Property<int>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.HasIndex("AlumnoId");

                    b.HasIndex("CursoId");

                    b.ToTable("CursoAlumno", (string)null);
                });

            modelBuilder.Entity("SophosProject.Models.Facultad", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.HasKey("Id");

                    b.ToTable("Facultad", (string)null);
                });

            modelBuilder.Entity("SophosProject.Models.Profesor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Experiencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.HasKey("Id");

                    b.ToTable("Profesor", (string)null);
                });

            modelBuilder.Entity("SophosProject.Models.Alumno", b =>
                {
                    b.HasOne("SophosProject.Models.Facultad", "Facultad")
                        .WithMany("Alumnos")
                        .HasForeignKey("FacultadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facultad");
                });

            modelBuilder.Entity("SophosProject.Models.Curso", b =>
                {
                    b.HasOne("SophosProject.Models.Curso", "PreRequisito")
                        .WithMany("CursosSiguientes")
                        .HasForeignKey("PreRequisitoId");

                    b.HasOne("SophosProject.Models.Profesor", "Profesor")
                        .WithMany("Cursos")
                        .HasForeignKey("ProfesorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PreRequisito");

                    b.Navigation("Profesor");
                });

            modelBuilder.Entity("SophosProject.Models.CursoAlumno", b =>
                {
                    b.HasOne("SophosProject.Models.Alumno", "Alumno")
                        .WithMany("CursoAlumnos")
                        .HasForeignKey("AlumnoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SophosProject.Models.Curso", "Curso")
                        .WithMany("CursoAlumnos")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alumno");

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("SophosProject.Models.Alumno", b =>
                {
                    b.Navigation("CursoAlumnos");
                });

            modelBuilder.Entity("SophosProject.Models.Curso", b =>
                {
                    b.Navigation("CursoAlumnos");

                    b.Navigation("CursosSiguientes");
                });

            modelBuilder.Entity("SophosProject.Models.Facultad", b =>
                {
                    b.Navigation("Alumnos");
                });

            modelBuilder.Entity("SophosProject.Models.Profesor", b =>
                {
                    b.Navigation("Cursos");
                });
#pragma warning restore 612, 618
        }
    }
}
