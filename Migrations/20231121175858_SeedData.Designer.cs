// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SophosProject.PostgreSQL;

#nullable disable

namespace SophosProject.Migrations
{
    [DbContext(typeof(UniversityDBContext))]
    [Migration("20231121175858_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SophosProject.Models.Alumno", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("FacultadId")
                        .HasColumnType("uuid")
                        .HasColumnName("FacultadId");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.HasKey("Id");

                    b.HasIndex("FacultadId");

                    b.ToTable("Alumno", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("54e1e829-d7d2-4b20-b266-8dad5fb3d7b0"),
                            FacultadId = new Guid("abfd9035-4d52-441f-b844-71bb24ee2278"),
                            Nombre = "Juan Perez"
                        },
                        new
                        {
                            Id = new Guid("32577785-96f0-4ab1-a46f-abd9048a2827"),
                            FacultadId = new Guid("abfd9035-4d52-441f-b844-71bb24ee2278"),
                            Nombre = "Luisa Vargas"
                        },
                        new
                        {
                            Id = new Guid("e80ca0f1-fa39-4017-84ca-1f1a50bfb85d"),
                            FacultadId = new Guid("abfd9035-4d52-441f-b844-71bb24ee2278"),
                            Nombre = "José Perdomo"
                        },
                        new
                        {
                            Id = new Guid("3c260206-daaa-4f81-b921-c721935ffa83"),
                            FacultadId = new Guid("f01f8fa0-e944-4b62-b49b-8c7f1d34cc65"),
                            Nombre = "Santiago Piñerez"
                        },
                        new
                        {
                            Id = new Guid("2f6401af-4446-401a-812f-5dcf0524b9f0"),
                            FacultadId = new Guid("f01f8fa0-e944-4b62-b49b-8c7f1d34cc65"),
                            Nombre = "Luis Ramos"
                        });
                });

            modelBuilder.Entity("SophosProject.Models.Curso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Creditos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1);

                    b.Property<int>("Cupos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<Guid?>("PreRequisitoId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProfesorId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("PreRequisitoId");

                    b.HasIndex("ProfesorId");

                    b.ToTable("Curso", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("62176c30-0da4-4706-ae1f-69d758c4c683"),
                            Creditos = 5,
                            Cupos = 15,
                            Descripcion = "Curso de cálculo",
                            Nombre = "Calculo I",
                            ProfesorId = new Guid("a7929a9c-8c55-4f35-afe4-a80163bc8aed")
                        },
                        new
                        {
                            Id = new Guid("d444bcc6-077f-4d29-bbb3-88adfa812768"),
                            Creditos = 5,
                            Cupos = 15,
                            Descripcion = "Curso de cálculo",
                            Nombre = "Calculo II",
                            PreRequisitoId = new Guid("62176c30-0da4-4706-ae1f-69d758c4c683"),
                            ProfesorId = new Guid("a7929a9c-8c55-4f35-afe4-a80163bc8aed")
                        },
                        new
                        {
                            Id = new Guid("62c72dca-12f1-4cce-bf62-b2708b33d7e4"),
                            Creditos = 3,
                            Cupos = 1,
                            Descripcion = "Curso de música",
                            Nombre = "Teoría de la música",
                            ProfesorId = new Guid("a7929a9c-8c55-4f35-afe4-a80163bc8aed")
                        });
                });

            modelBuilder.Entity("SophosProject.Models.CursoAlumno", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AlumnoId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("uuid");

                    b.Property<int>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.HasIndex("AlumnoId");

                    b.HasIndex("CursoId");

                    b.ToTable("CursoAlumno", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("546306fa-67a4-40e3-a7a5-ca6917eb5f00"),
                            AlumnoId = new Guid("54e1e829-d7d2-4b20-b266-8dad5fb3d7b0"),
                            CursoId = new Guid("62176c30-0da4-4706-ae1f-69d758c4c683"),
                            Estado = 1
                        },
                        new
                        {
                            Id = new Guid("a4dcae21-6c18-44aa-bbba-1b0b65c38362"),
                            AlumnoId = new Guid("32577785-96f0-4ab1-a46f-abd9048a2827"),
                            CursoId = new Guid("62176c30-0da4-4706-ae1f-69d758c4c683"),
                            Estado = 1
                        },
                        new
                        {
                            Id = new Guid("5b80e236-2cae-4a4d-ad97-1f426df02d44"),
                            AlumnoId = new Guid("e80ca0f1-fa39-4017-84ca-1f1a50bfb85d"),
                            CursoId = new Guid("62176c30-0da4-4706-ae1f-69d758c4c683"),
                            Estado = 0
                        },
                        new
                        {
                            Id = new Guid("1f55b3ff-035d-4223-a659-261038182cbc"),
                            AlumnoId = new Guid("3c260206-daaa-4f81-b921-c721935ffa83"),
                            CursoId = new Guid("62c72dca-12f1-4cce-bf62-b2708b33d7e4"),
                            Estado = 1
                        });
                });

            modelBuilder.Entity("SophosProject.Models.Facultad", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.HasKey("Id");

                    b.ToTable("Facultad", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("abfd9035-4d52-441f-b844-71bb24ee2278"),
                            Nombre = "Ingeniería"
                        },
                        new
                        {
                            Id = new Guid("f01f8fa0-e944-4b62-b49b-8c7f1d34cc65"),
                            Nombre = "Música"
                        });
                });

            modelBuilder.Entity("SophosProject.Models.Profesor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Experiencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.HasKey("Id");

                    b.ToTable("Profesor", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("3c260206-daaa-4f81-b921-c721935ffa83"),
                            Experiencia = 5,
                            Nombre = "Julián Perea",
                            Titulo = "Master"
                        },
                        new
                        {
                            Id = new Guid("a7929a9c-8c55-4f35-afe4-a80163bc8aed"),
                            Experiencia = 15,
                            Nombre = "Marissa Arteta",
                            Titulo = "Doctorado"
                        });
                });

            modelBuilder.Entity("SophosProject.Models.Alumno", b =>
                {
                    b.HasOne("SophosProject.Models.Facultad", "Facultad")
                        .WithMany("Alumnos")
                        .HasForeignKey("FacultadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facultad");
                });

            modelBuilder.Entity("SophosProject.Models.Curso", b =>
                {
                    b.HasOne("SophosProject.Models.Curso", "PreRequisito")
                        .WithMany("CursosSiguientes")
                        .HasForeignKey("PreRequisitoId");

                    b.HasOne("SophosProject.Models.Profesor", "Profesor")
                        .WithMany("Cursos")
                        .HasForeignKey("ProfesorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PreRequisito");

                    b.Navigation("Profesor");
                });

            modelBuilder.Entity("SophosProject.Models.CursoAlumno", b =>
                {
                    b.HasOne("SophosProject.Models.Alumno", "Alumno")
                        .WithMany("CursoAlumnos")
                        .HasForeignKey("AlumnoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SophosProject.Models.Curso", "Curso")
                        .WithMany("CursoAlumnos")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alumno");

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("SophosProject.Models.Alumno", b =>
                {
                    b.Navigation("CursoAlumnos");
                });

            modelBuilder.Entity("SophosProject.Models.Curso", b =>
                {
                    b.Navigation("CursoAlumnos");

                    b.Navigation("CursosSiguientes");
                });

            modelBuilder.Entity("SophosProject.Models.Facultad", b =>
                {
                    b.Navigation("Alumnos");
                });

            modelBuilder.Entity("SophosProject.Models.Profesor", b =>
                {
                    b.Navigation("Cursos");
                });
#pragma warning restore 612, 618
        }
    }
}
